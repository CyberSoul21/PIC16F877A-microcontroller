CCS PCM C Compiler, Version 4.104, 5967               07-May-11 06:33

               Filename: D:\w!ls0N\Microcontroladores\PROYECTOS\Turnos_Cajas\turnos.lst

               ROM used: 374 words (5%)
                         Largest free fragment is 2048
               RAM used: 7 (2%) at main() level
                         29 (8%) worst case
               Stack:    1 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   019
0003:  NOP
.................... #include <16F877A.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
.................... #use delay (clock=4000000) //frecuencia de operacion 
*
0004:  MOVLW  37
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  01
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  4A
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  GOTO   016
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  RETURN
.................... #fuses xt, nowdt  //palabra de configuracion 
....................  
....................  
....................  
.................... void main() 
.................... { 
0019:  CLRF   04
001A:  BCF    03.7
001B:  MOVLW  1F
001C:  ANDWF  03,F
001D:  BSF    03.5
001E:  BSF    1F.0
001F:  BSF    1F.1
0020:  BSF    1F.2
0021:  BCF    1F.3
0022:  MOVLW  07
0023:  MOVWF  1C
....................  
.................... SET_TRIS_e(0X0F);; // Puerto A como entradas 
*
0027:  BSF    03.5
0028:  BSF    09.1
0029:  BSF    09.1
002A:  BSF    09.1
.................... SET_TRIS_B( 0x00);// PUERTO B COMO SALIDAS 
002B:  MOVLW  00
002C:  MOVWF  06
.................... SET_TRIS_C( 0x00);// PUERTO C COMO SALIDAS 
002D:  MOVWF  07
002E:  BCF    03.5
002F:  MOVWF  20
.................... SET_TRIS_D( 0x00);// PUERTO D COMO SALIDAS 
0030:  BSF    03.5
0031:  MOVWF  08
....................  
.................... int unidades[10]={0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x83,0xf8,0x80,0x98}; 
0032:  MOVLW  C0
0033:  BCF    03.5
0034:  MOVWF  21
0035:  MOVLW  F9
0036:  MOVWF  22
0037:  MOVLW  A4
0038:  MOVWF  23
0039:  MOVLW  B0
003A:  MOVWF  24
003B:  MOVLW  99
003C:  MOVWF  25
003D:  MOVLW  92
003E:  MOVWF  26
003F:  MOVLW  83
0040:  MOVWF  27
0041:  MOVLW  F8
0042:  MOVWF  28
0043:  MOVLW  80
0044:  MOVWF  29
0045:  MOVLW  98
0046:  MOVWF  2A
.................... int decenas[10]={0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x83,0xf8,0x80,0x98}; 
0047:  MOVLW  C0
0048:  MOVWF  2B
0049:  MOVLW  F9
004A:  MOVWF  2C
004B:  MOVLW  A4
004C:  MOVWF  2D
004D:  MOVLW  B0
004E:  MOVWF  2E
004F:  MOVLW  99
0050:  MOVWF  2F
0051:  MOVLW  92
0052:  MOVWF  30
0053:  MOVLW  83
0054:  MOVWF  31
0055:  MOVLW  F8
0056:  MOVWF  32
0057:  MOVLW  80
0058:  MOVWF  33
0059:  MOVLW  98
005A:  MOVWF  34
....................  
.................... int un, dec; 
.................... un = 0; 
005B:  CLRF   35
.................... dec = 0; 
005C:  CLRF   36
.................... output_b(unidades[un]); 
005D:  MOVLW  21
005E:  ADDWF  35,W
005F:  MOVWF  04
0060:  BCF    03.7
0061:  MOVF   00,W
0062:  MOVWF  37
0063:  BSF    03.5
0064:  CLRF   06
0065:  BCF    03.5
0066:  MOVF   37,W
0067:  MOVWF  06
.................... output_c(decenas[dec]); 
0068:  MOVLW  2B
0069:  ADDWF  36,W
006A:  MOVWF  04
006B:  BCF    03.7
006C:  MOVF   00,W
006D:  MOVWF  37
006E:  MOVLW  00
006F:  MOVWF  20
0070:  BSF    03.5
0071:  CLRF   07
0072:  BCF    03.5
0073:  MOVF   37,W
0074:  MOVWF  07
.................... output_d(unidades[un]); 
0075:  MOVLW  21
0076:  ADDWF  35,W
0077:  MOVWF  04
0078:  BCF    03.7
0079:  MOVF   00,W
007A:  MOVWF  37
007B:  BSF    03.5
007C:  CLRF   08
007D:  BCF    03.5
007E:  MOVF   37,W
007F:  MOVWF  08
....................  
....................       while(true) 
....................    { 
....................        if((input(pin_a0)==1)) 
0080:  BSF    03.5
0081:  BSF    05.0
0082:  BCF    03.5
0083:  BTFSS  05.0
0084:  GOTO   0BD
....................        { 
....................          delay_ms(10); 
0085:  MOVLW  0A
0086:  MOVWF  37
0087:  CALL   004
....................          while((input(pin_a0)==1)) 
....................          { 
0088:  BSF    03.5
0089:  BSF    05.0
008A:  BCF    03.5
008B:  BTFSS  05.0
008C:  GOTO   091
....................           delay_ms(10); 
008D:  MOVLW  0A
008E:  MOVWF  37
008F:  CALL   004
....................          } 
0090:  GOTO   088
....................         
....................        un++; 
0091:  INCF   35,F
....................         
....................        if(un>9) 
0092:  MOVF   35,W
0093:  SUBLW  09
0094:  BTFSC  03.0
0095:  GOTO   09D
....................        { 
....................          un = 0; 
0096:  CLRF   35
....................          dec++; 
0097:  INCF   36,F
....................          if(dec>9) 
0098:  MOVF   36,W
0099:  SUBLW  09
009A:  BTFSC  03.0
009B:  GOTO   09D
....................          { 
....................            dec = 0; 
009C:  CLRF   36
....................            
....................          } 
....................        } 
....................        output_C(unidades[un]); 
009D:  MOVLW  21
009E:  ADDWF  35,W
009F:  MOVWF  04
00A0:  BCF    03.7
00A1:  MOVF   00,W
00A2:  MOVWF  37
00A3:  MOVLW  00
00A4:  MOVWF  20
00A5:  BSF    03.5
00A6:  CLRF   07
00A7:  BCF    03.5
00A8:  MOVF   37,W
00A9:  MOVWF  07
....................        output_D(decenas[dec]); 
00AA:  MOVLW  2B
00AB:  ADDWF  36,W
00AC:  MOVWF  04
00AD:  BCF    03.7
00AE:  MOVF   00,W
00AF:  MOVWF  37
00B0:  BSF    03.5
00B1:  CLRF   08
00B2:  BCF    03.5
00B3:  MOVF   37,W
00B4:  MOVWF  08
....................        delay_ms(10); 
00B5:  MOVLW  0A
00B6:  MOVWF  37
00B7:  CALL   004
....................        output_B(unidades[0x01]); 
00B8:  BSF    03.5
00B9:  CLRF   06
00BA:  BCF    03.5
00BB:  MOVF   22,W
00BC:  MOVWF  06
....................              
....................        } 
....................        if((input(pin_a1)==1)) 
00BD:  BSF    03.5
00BE:  BSF    05.1
00BF:  BCF    03.5
00C0:  BTFSS  05.1
00C1:  GOTO   0FA
....................        { 
....................           
....................           delay_ms(10); 
00C2:  MOVLW  0A
00C3:  MOVWF  37
00C4:  CALL   004
....................           while((input(pin_a1)==1)) 
....................           { 
00C5:  BSF    03.5
00C6:  BSF    05.1
00C7:  BCF    03.5
00C8:  BTFSS  05.1
00C9:  GOTO   0CE
....................             delay_ms(10); 
00CA:  MOVLW  0A
00CB:  MOVWF  37
00CC:  CALL   004
....................           } 
00CD:  GOTO   0C5
....................           un++; 
00CE:  INCF   35,F
....................           if(un>9) 
00CF:  MOVF   35,W
00D0:  SUBLW  09
00D1:  BTFSC  03.0
00D2:  GOTO   0DA
....................           { 
....................            un = 0; 
00D3:  CLRF   35
....................            dec++; 
00D4:  INCF   36,F
....................            if(dec>9) 
00D5:  MOVF   36,W
00D6:  SUBLW  09
00D7:  BTFSC  03.0
00D8:  GOTO   0DA
....................           { 
....................            dec = 0; 
00D9:  CLRF   36
....................            
....................           } 
....................           } 
....................             
....................           output_C(unidades[un]); 
00DA:  MOVLW  21
00DB:  ADDWF  35,W
00DC:  MOVWF  04
00DD:  BCF    03.7
00DE:  MOVF   00,W
00DF:  MOVWF  37
00E0:  MOVLW  00
00E1:  MOVWF  20
00E2:  BSF    03.5
00E3:  CLRF   07
00E4:  BCF    03.5
00E5:  MOVF   37,W
00E6:  MOVWF  07
....................           output_D(decenas[dec]); 
00E7:  MOVLW  2B
00E8:  ADDWF  36,W
00E9:  MOVWF  04
00EA:  BCF    03.7
00EB:  MOVF   00,W
00EC:  MOVWF  37
00ED:  BSF    03.5
00EE:  CLRF   08
00EF:  BCF    03.5
00F0:  MOVF   37,W
00F1:  MOVWF  08
....................           delay_ms(10); 
00F2:  MOVLW  0A
00F3:  MOVWF  37
00F4:  CALL   004
....................           output_B(unidades[0x02]); 
00F5:  BSF    03.5
00F6:  CLRF   06
00F7:  BCF    03.5
00F8:  MOVF   23,W
00F9:  MOVWF  06
....................             
....................         
....................        } 
....................        if((input(pin_a2)==1)) 
00FA:  BSF    03.5
00FB:  BSF    05.2
00FC:  BCF    03.5
00FD:  BTFSS  05.2
00FE:  GOTO   137
....................        { 
....................            
....................           delay_ms(10); 
00FF:  MOVLW  0A
0100:  MOVWF  37
0101:  CALL   004
....................           while((input(pin_a2)==1)) 
....................           { 
0102:  BSF    03.5
0103:  BSF    05.2
0104:  BCF    03.5
0105:  BTFSS  05.2
0106:  GOTO   10B
....................             delay_ms(10); 
0107:  MOVLW  0A
0108:  MOVWF  37
0109:  CALL   004
....................           } 
010A:  GOTO   102
....................           un++; 
010B:  INCF   35,F
....................           if(un>9) 
010C:  MOVF   35,W
010D:  SUBLW  09
010E:  BTFSC  03.0
010F:  GOTO   117
....................           { 
....................             un = 0; 
0110:  CLRF   35
....................             dec++; 
0111:  INCF   36,F
....................             if(dec>9) 
0112:  MOVF   36,W
0113:  SUBLW  09
0114:  BTFSC  03.0
0115:  GOTO   117
....................             { 
....................             dec = 0; 
0116:  CLRF   36
....................            
....................             } 
....................           } 
....................           output_C(unidades[un]); 
0117:  MOVLW  21
0118:  ADDWF  35,W
0119:  MOVWF  04
011A:  BCF    03.7
011B:  MOVF   00,W
011C:  MOVWF  37
011D:  MOVLW  00
011E:  MOVWF  20
011F:  BSF    03.5
0120:  CLRF   07
0121:  BCF    03.5
0122:  MOVF   37,W
0123:  MOVWF  07
....................           output_D(decenas[dec]); 
0124:  MOVLW  2B
0125:  ADDWF  36,W
0126:  MOVWF  04
0127:  BCF    03.7
0128:  MOVF   00,W
0129:  MOVWF  37
012A:  BSF    03.5
012B:  CLRF   08
012C:  BCF    03.5
012D:  MOVF   37,W
012E:  MOVWF  08
....................           delay_ms(10); 
012F:  MOVLW  0A
0130:  MOVWF  37
0131:  CALL   004
....................           output_B(unidades[0x03]); 
0132:  BSF    03.5
0133:  CLRF   06
0134:  BCF    03.5
0135:  MOVF   24,W
0136:  MOVWF  06
....................              
....................        } 
....................        if((input(pin_a3)==1)) 
0137:  BSF    03.5
0138:  BSF    05.3
0139:  BCF    03.5
013A:  BTFSS  05.3
013B:  GOTO   174
....................        { 
....................            
....................           delay_ms(10); 
013C:  MOVLW  0A
013D:  MOVWF  37
013E:  CALL   004
....................           while((input(pin_a3)==1)) 
....................           { 
013F:  BSF    03.5
0140:  BSF    05.3
0141:  BCF    03.5
0142:  BTFSS  05.3
0143:  GOTO   148
....................             delay_ms(10); 
0144:  MOVLW  0A
0145:  MOVWF  37
0146:  CALL   004
....................           } 
0147:  GOTO   13F
....................           un++; 
0148:  INCF   35,F
....................           if(un>9) 
0149:  MOVF   35,W
014A:  SUBLW  09
014B:  BTFSC  03.0
014C:  GOTO   154
....................           { 
....................             un = 0; 
014D:  CLRF   35
....................             dec++; 
014E:  INCF   36,F
....................             if(dec>9) 
014F:  MOVF   36,W
0150:  SUBLW  09
0151:  BTFSC  03.0
0152:  GOTO   154
....................           { 
....................             dec = 0; 
0153:  CLRF   36
....................             
....................           } 
....................           } 
....................           output_C(unidades[un]); 
0154:  MOVLW  21
0155:  ADDWF  35,W
0156:  MOVWF  04
0157:  BCF    03.7
0158:  MOVF   00,W
0159:  MOVWF  37
015A:  MOVLW  00
015B:  MOVWF  20
015C:  BSF    03.5
015D:  CLRF   07
015E:  BCF    03.5
015F:  MOVF   37,W
0160:  MOVWF  07
....................           output_D(decenas[dec]); 
0161:  MOVLW  2B
0162:  ADDWF  36,W
0163:  MOVWF  04
0164:  BCF    03.7
0165:  MOVF   00,W
0166:  MOVWF  37
0167:  BSF    03.5
0168:  CLRF   08
0169:  BCF    03.5
016A:  MOVF   37,W
016B:  MOVWF  08
....................           delay_ms(10); 
016C:  MOVLW  0A
016D:  MOVWF  37
016E:  CALL   004
....................           output_B(unidades[0x04]); 
016F:  BSF    03.5
0170:  CLRF   06
0171:  BCF    03.5
0172:  MOVF   25,W
0173:  MOVWF  06
....................             
....................             
....................        } 
....................    } 
0174:  GOTO   080
.................... } 
....................     
....................  
....................  
....................  
0175:  SLEEP

Configuration Fuses:
   Word  1: 3F71   XT NOWDT PUT NODEBUG NOPROTECT BROWNOUT NOLVP NOCPD NOWRT
