CCS PCM C Compiler, Version 4.104, 5967               05-jun.-14 13:22

               Filename: C:\Users\USER\Archivos\Wilson\Microcontroladores\PROYECTOS\timers\ejemplo.lst

               ROM used: 156 words (2%)
                         Largest free fragment is 2048
               RAM used: 14 (4%) at main() level
                         15 (4%) worst case
               Stack:    2 worst case (1 in main + 1 for interrupts)

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   053
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  MOVLW  8C
0018:  MOVWF  04
0019:  BTFSS  00.0
001A:  GOTO   01D
001B:  BTFSC  0C.0
001C:  GOTO   02E
001D:  MOVF   22,W
001E:  MOVWF  04
001F:  MOVF   23,W
0020:  MOVWF  77
0021:  MOVF   24,W
0022:  MOVWF  78
0023:  MOVF   25,W
0024:  MOVWF  79
0025:  MOVF   26,W
0026:  MOVWF  7A
0027:  MOVF   20,W
0028:  MOVWF  0A
0029:  SWAPF  21,W
002A:  MOVWF  03
002B:  SWAPF  7F,F
002C:  SWAPF  7F,W
002D:  RETFIE
002E:  BCF    0A.3
002F:  BCF    0A.4
0030:  GOTO   031
.................... #include "C:\Users\USER\Archivos\Wilson\Microcontroladores\PROYECTOS\timers\ejemplo.h" 
.................... #include <16F877A.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
.................... #device adc=8 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES XT                    	//Crystal osc <= 4mhz for PCM/PCH , 3mhz to 10 mhz for PCD 
.................... #FUSES PUT                   	//Power Up Timer 
.................... #FUSES NOPROTECT             	//Code not protected from reading 
.................... #FUSES NODEBUG               	//No Debug mode for ICD 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOCPD                 	//No EE protection 
.................... #FUSES NOWRT                 	//Program memory not write protected 
.................... #FUSES RESERVED              	//Used to set the reserved FUSE bits 
....................  
.................... #use delay(clock=4000000) 
*
003E:  MOVLW  29
003F:  MOVWF  04
0040:  BCF    03.7
0041:  MOVF   00,W
0042:  BTFSC  03.2
0043:  GOTO   052
0044:  MOVLW  01
0045:  MOVWF  78
0046:  CLRF   77
0047:  DECFSZ 77,F
0048:  GOTO   047
0049:  DECFSZ 78,F
004A:  GOTO   046
004B:  MOVLW  4A
004C:  MOVWF  77
004D:  DECFSZ 77,F
004E:  GOTO   04D
004F:  GOTO   050
0050:  DECFSZ 00,F
0051:  GOTO   044
0052:  RETURN
.................... #define BTTON1   PIN_C0 
.................... #define LED1   PIN_D0 
.................... #define LED2   PIN_D1 
....................  
....................  
.................... #int_TIMER1 
....................  
....................  
....................  
....................  
....................  
.................... void  TIMER1_isr(void)  
.................... { 
....................     
....................   output_toggle(LED1); 
*
0031:  BSF    03.5
0032:  BCF    08.0
0033:  MOVLW  01
0034:  BCF    03.5
0035:  XORWF  08,F
....................   //delay_ms(1000); 
....................   set_timer1(3036); 
0036:  MOVLW  0B
0037:  MOVWF  0F
0038:  MOVLW  DC
0039:  MOVWF  0E
.................... } 
....................  
003A:  BCF    0C.0
003B:  BCF    0A.3
003C:  BCF    0A.4
003D:  GOTO   01D
.................... void main() 
.................... { 
*
0053:  CLRF   04
0054:  BCF    03.7
0055:  MOVLW  1F
0056:  ANDWF  03,F
0057:  BSF    03.5
0058:  BSF    1F.0
0059:  BSF    1F.1
005A:  BSF    1F.2
005B:  BCF    1F.3
005C:  MOVLW  07
005D:  MOVWF  1C
....................    delay_ms(1000); 
*
0061:  MOVLW  04
0062:  MOVWF  28
0063:  MOVLW  FA
0064:  MOVWF  29
0065:  CALL   03E
0066:  DECFSZ 28,F
0067:  GOTO   063
....................     
....................    setup_timer_0(RTCC_INTERNAL|RTCC_DIV_8); 
0068:  BSF    03.5
0069:  MOVF   01,W
006A:  ANDLW  C0
006B:  IORLW  02
006C:  MOVWF  01
....................    setup_timer_1(T1_INTERNAL|T1_DIV_BY_8); 
006D:  MOVLW  B5
006E:  BCF    03.5
006F:  MOVWF  10
....................    enable_interrupts(INT_TIMER1); 
0070:  BSF    03.5
0071:  BSF    0C.0
....................    enable_interrupts(GLOBAL); 
0072:  MOVLW  C0
0073:  BCF    03.5
0074:  IORWF  0B,F
....................     
....................    set_timer1(3036); 
0075:  MOVLW  0B
0076:  MOVWF  0F
0077:  MOVLW  DC
0078:  MOVWF  0E
....................    // TODO: USER CODE!! 
....................    //delay_ms(1000); 
....................    SET_TRIS_C(0xFF); 
0079:  MOVLW  FF
007A:  BSF    03.5
007B:  MOVWF  07
007C:  BCF    03.5
007D:  MOVWF  27
....................    SET_TRIS_D(0x00); 
007E:  MOVLW  00
007F:  BSF    03.5
0080:  MOVWF  08
....................    output_c(0x01); 
0081:  BCF    03.5
0082:  MOVWF  27
0083:  BSF    03.5
0084:  CLRF   07
0085:  MOVLW  01
0086:  BCF    03.5
0087:  MOVWF  07
....................    while(true) 
....................    { 
....................       
....................      if(input(BTTON1)==1) 
0088:  BSF    27.0
0089:  MOVF   27,W
008A:  BSF    03.5
008B:  MOVWF  07
008C:  BCF    03.5
008D:  BTFSS  07.0
008E:  GOTO   09A
....................      { 
....................      //while(input(BTTON1)==1) 
....................        //{ 
....................         //delay_ms(100); 
....................        //} 
....................      output_toggle(LED2); 
008F:  BSF    03.5
0090:  BCF    08.1
0091:  MOVLW  02
0092:  BCF    03.5
0093:  XORWF  08,F
....................      delay_ms(500); 
0094:  MOVWF  28
0095:  MOVLW  FA
0096:  MOVWF  29
0097:  CALL   03E
0098:  DECFSZ 28,F
0099:  GOTO   095
....................      } 
....................    } 
009A:  GOTO   088
....................  
.................... } 
009B:  SLEEP

Configuration Fuses:
   Word  1: 3F31   XT NOWDT PUT NODEBUG NOPROTECT NOBROWNOUT NOLVP NOCPD NOWRT
